name: fat-nestjs

services:
  server:
    container_name: server
    command: ["/usr/src/app/bin/fat-dev"]
    build:
      context: ../
      dockerfile: server/Dockerfile
      target: dev
    restart: unless-stopped
    volumes:
      - ../server:/usr/src/app
      - /usr/src/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      BUILD_IMAGE: development
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    ports:
      - 9230:9230
      - 9231:9231
      - 2283:2283
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  redis:
    container_name: fat_redis
    image: redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: fat_postgres
    image: postgres:14-alpine@sha256:8430d17c310fe23e0b7dc930dad8b1020221f35a43545705b5dfad6ad40786d9
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - ${UPLOAD_LOCATION}/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on

  # prometheus:
  #   container_name: fat_prometheus
  # ports:
  #   - 9090:9090
  # image: prom/prometheus@sha256:502ad90314c7485892ce696cb14a99fceab9fc27af29f4b427f41bd39701a199
  # volumes:
  #   - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   - prometheus-data:/prometheus
  #
  # grafana:
  # container_name: fat_grafana
  # command: ['./run.sh', '-disable-reporting']
  # ports:
  #   - 3000:3000
  # image: grafana/grafana:10.3.3-ubuntu
  # volumes:
  #   - grafana-data:/var/lib/grafana

volumes:
  model-cache:
